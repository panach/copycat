body {
    height: 100%;
    background: linear-gradient(45deg, #fc5cac 0%, #fceb7e 88%) no-repeat;
    background-attachment: fixed;
}
//전체box
.box {
    $los: 50%;
    position: fixed;
    top: $los;
    left: $los;
    transform: translate(-50%, -50%);
}
//top, title
.info {
    width: $boxsize;
    height: $infoheight;
    border-radius: $br $br 0 0;
    background-color: rgba(236, 240, 241,0.3);
    backdrop-filter: blur(5px);

    &_t1, &_t2 {
        padding: 0;
        margin: 0;
        text-align: center;
        color: #fff;
        
    }
    &_t1 {
        padding-top: 15px;
    }
    &_t2 {
        padding-top: 10px;
    }
}
//thum
.thum {
    position: relative;
    width: $boxsize;
    height: $thumheight;
    border-radius: 0 0 $br $br;
    background: url("https://media1.giphy.com/media/xGFbcVPJpjhFS/giphy.gif?cid=790b76114e53fe16cbb577f10098a9c641bce63d9a6f4ae8&rid=giphy.gif&ct=g") center no-repeat;
    background-size: cover;
}
// lp
.lpbox {
    $size: $thumheight;
    position: absolute;
    top: 50%;
    right: -150px;
    z-index: -1;
    width: $size;
    height: $size;
    background: url($lp) center no-repeat;
    background-size: $size $size;
    animation: rotate 4s linear infinite;
}

@keyframes rotate { // lp 판 동작
	0% {
		transform: translateY(-50%) rotate(0deg);
	}
	100% {
		transform: translateY(-50%) rotate(360deg);
	}
}
.icon_box {
    @include center;
    display: flex;
    width: 70%;
    justify-content: space-around;
    button {
        width: 60px;
        &:hover svg{
            fill: rgba(255, 255, 255, 0.8);
        }
    }
    svg {
        width: 100%;
        height: auto;
        fill: rgba(255, 255, 255, 0.4);
        transition: all .2s ease-in;
    }
    &_center {
        position: relative;
        transform-style: preserve-3d;
        transition: all .2s ease-in;
        backface-visibility: hidden;
        button {
            backface-visibility: hidden;
            &:nth-child(2) {
                position: absolute;
                top: 50%;
                left: 50%;
                background-color: gray;
                transform: rotateY(180deg) translate3D(-50%, -50%, 50%);
            }
        }
        &:hover,
        &.on {
            transform: rotateX(180deg)
        }
    }

}

